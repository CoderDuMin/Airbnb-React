{"version":3,"file":"static/js/660.afe81331.chunk.js","mappings":"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","sources":["assets/svg/icon-arrow-left.jsx","assets/svg/icon-arrow-right.jsx","base-ui/indicator/style.js","base-ui/indicator/index.jsx","components/room-item/style.jsx","components/room-item/index.jsx","views/entire/style.js","views/entire/c-cpns/entire-filter/style.js","views/entire/c-cpns/entire-filter/index.jsx","views/entire/c-cpns/entire-rooms/style.js","views/entire/c-cpns/entire-rooms/index.jsx","views/entire/c-cpns/entire-pagenav/style.js","views/entire/c-cpns/entire-pagenav/index.jsx","views/entire/index.jsx"],"sourcesContent":["import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowLeft = memo((props) => {\n  const {width=12,height=12} = props\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"previous\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m13.7 16.29a1 1 0 1 1 -1.42 1.41l-8-8a1 1 0 0 1 0-1.41l8-8a1 1 0 1 1 1.42 1.41l-7.29 7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowLeft","import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowRight = memo((props) => {\n  const {width=12,height=12} = props\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"next\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m4.29 1.71a1 1 0 1 1 1.42-1.41l8 8a1 1 0 0 1 0 1.41l-8 8a1 1 0 1 1 -1.42-1.41l7.29-7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowRight","import styled from \"styled-components\";\r\n\r\n\r\nexport const IndicatorWrapper = styled.div`\r\n  overflow: hidden;  \r\n\r\n  .i-content {\r\n    display: flex;\r\n    position: relative;\r\n    transition: transform 200ms ease;\r\n\r\n    > * {\r\n      flex-shrink: 0;\r\n    }\r\n  }\r\n`","import PropTypes from 'prop-types'\r\nimport React, { memo, useEffect, useRef } from 'react'\r\nimport { IndicatorWrapper } from './style'\r\n\r\nconst Indicator = memo((props) => {\r\n  const { selectIndex = 0 } = props\r\n  const contentRef = useRef()\r\n\r\n  useEffect(() => {\r\n    // 1.获取selectIndex对应的item\r\n    const selectItemEl = contentRef.current.children[selectIndex]\r\n    const itemLeft = selectItemEl.offsetLeft\r\n    const itemWidth = selectItemEl.clientWidth\r\n    // 2.content的宽度\r\n    const contentWidth = contentRef.current.clientWidth\r\n    const contentScroll = contentRef.current.scrollWidth\r\n    // 3.获取selectIndex要滚动的距离\r\n    let distance = itemLeft + itemWidth * 0.5 - contentWidth * 0.5\r\n    // 4.特殊情况的处理\r\n    if (distance < 0) distance = 0 // 左边的特殊情况处理\r\n    const totalDistance = contentScroll - contentWidth\r\n    if (distance > totalDistance) distance = totalDistance // 右边的特殊情况处理\r\n\r\n    // 5.改变位置即可\r\n    contentRef.current.style.transform = `translate(${-distance}px)`\r\n  }, [selectIndex])\r\n\r\n  return (\r\n    <IndicatorWrapper>\r\n      <div className='i-content' ref={contentRef}>\r\n        {\r\n          props.children\r\n        }\r\n      </div>\r\n    </IndicatorWrapper>\r\n  )\r\n})\r\n\r\nIndicator.propTypes = {\r\n  selectIndex: PropTypes.number\r\n}\r\n\r\nexport default Indicator","import styled from \"styled-components\";\r\n\r\nexport const RoomItemWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  flex-shrink: 0;\r\n  width: ${props => props.roomWidth};\r\n  padding: 8px;\r\n\r\n  .inner {\r\n    width: 100%;\r\n  }\r\n\r\n  .cover {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: 66.66% 8px 0;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n\r\n    img {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n  .slider {\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      .control {\r\n        display: flex;\r\n      }\r\n    }\r\n\r\n    .control {\r\n      position: absolute;\r\n      z-index: 1;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      display: none;\r\n      justify-content: space-between;\r\n      bottom: 0;\r\n      color: #fff;\r\n\r\n      .btn {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 83px;\r\n        height: 100%;\r\n        background: linear-gradient(to left, transparent 0%, rgba(0, 0, 0, 0.25) 100%);\r\n\r\n        &.right {\r\n          background: linear-gradient(to right, transparent 0%, rgba(0, 0, 0, 0.25) 100%);\r\n        }\r\n      }\r\n    }\r\n\r\n    .indicator {\r\n      position: absolute;\r\n      z-index: 9;\r\n      bottom: 10px;\r\n      left: 0;\r\n      right: 0;\r\n      width: 30%;\r\n      margin: 0 auto;\r\n\r\n      .item {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 14.29%;\r\n\r\n        .dot {\r\n          width: 6px;\r\n          height: 6px;\r\n          background-color: #fff;\r\n          border-radius: 50%;\r\n\r\n          &.active {\r\n            width: 8px;\r\n            height: 8px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .desc {\r\n    margin: 10px 0 5px;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    color: ${props => props.verifyColor};\r\n  }\r\n\r\n  .name {\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n\r\n    overflow: hidden;  \r\n    text-overflow: ellipsis; \r\n    display: -webkit-box; \r\n    -webkit-line-clamp: 2; \r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  .price {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  .bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: ${props => props.theme.text.primaryColor};\r\n\r\n    .count {\r\n      margin: 0 2px 0 4px;\r\n    }\r\n\r\n    .MuiRating-decimal {\r\n      margin-right: -2px;\r\n    }\r\n  }\r\n`","import React, { memo ,useRef,useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { RoomItemWrapper } from './style'\r\nimport { Rating } from '@mui/material'\r\nimport { Carousel } from 'antd'\r\nimport IconArrowLeft from '@/assets/svg/icon-arrow-left'\r\nimport IconArrowRight from '@/assets/svg/icon-arrow-right'\r\nimport Indicator from '@/base-ui/indicator'\r\nimport classNames from 'classnames'\r\n\r\nconst RoomItem = memo(function RoomItem(props) {\r\n  const { itemData,roomWidth,itemClick } = props\r\n\r\n  // 跳转详情页\r\n  const handleItemClick = () => {\r\n    itemClick && itemClick(itemData)\r\n  }\r\n  // 轮播图逻辑\r\n  const sliderRef = useRef()\r\n  const [selectedIndex,setSelectedIndex] = useState(0)\r\n  const controlClickHandle = (e,isRight=true) => {\r\n      e.stopPropagation()\r\n     // 上一个面板/下一个面板\r\n     isRight ? sliderRef.current.next(): sliderRef.current.prev()\r\n\r\n     // 最新的索引\r\n     let newIndex = isRight ? selectedIndex + 1: selectedIndex - 1\r\n     const length = itemData.picture_urls.length\r\n     if (newIndex < 0) newIndex = length - 1\r\n     if (newIndex > length - 1) newIndex = 0\r\n     setSelectedIndex(newIndex)\r\n  }\r\n\r\n  const pictureElement = (\r\n        <div className=\"cover\">\r\n          <img src={itemData.picture_url} alt=\"\" />\r\n        </div>\r\n    )\r\n  const sliderElement = (\r\n    <div className=\"slider\">\r\n      <div className='control'>\r\n        <div className='btn left' onClick={e => controlClickHandle(e,false)}>\r\n          <IconArrowLeft width=\"30\" height=\"30\"/>\r\n        </div>\r\n        <div className='btn right' onClick={e => controlClickHandle(e,true)}>\r\n          <IconArrowRight width=\"30\" height=\"30\"/>\r\n        </div>\r\n      </div>\r\n      <div className='indicator'>\r\n        <Indicator selectIndex={selectedIndex}>\r\n          {\r\n            itemData?.picture_urls?.map((item, index) => {\r\n              return (\r\n                <div className=\"item\" key={item}>\r\n                  <span className={classNames(\"dot\", { active: selectedIndex === index })}></span>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </Indicator>\r\n      </div>\r\n      <Carousel dots={false} ref={sliderRef}>\r\n        {\r\n          itemData?.picture_urls?.map(item => {\r\n            return (\r\n              <div className='cover' key={item}>\r\n                <img src={item} alt=\"\" />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </Carousel>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <RoomItemWrapper verifyColor={itemData?.verify_info?.text_color || '#39576a'} roomWidth={roomWidth} onClick={handleItemClick}>\r\n      <div className=\"inner\">\r\n        { !itemData.picture_urls ? pictureElement : sliderElement}\r\n        <div className=\"desc\">\r\n          {itemData.verify_info.messages?.join(' · ')}\r\n        </div>\r\n        <div className=\"name\">\r\n          {itemData.name}\r\n        </div>\r\n        <div className=\"price\">\r\n          ￥{itemData.price}/晚\r\n        </div>\r\n        <div className=\"bottom\">\r\n          <Rating name=\"half-rating-read\" \r\n            defaultValue={itemData.star_rating ?? 5} \r\n            precision={0.1} \r\n            readOnly\r\n            sx={{fontSize:'12px',color:'#008489'}} />\r\n          <span className=\"count\">{itemData.reviews_count}</span>\r\n          {\r\n            itemData.bottom_info && <span className='extra'>·{itemData.bottom_info.content}</span>\r\n          }\r\n        </div>\r\n      </div>\r\n    </RoomItemWrapper>\r\n  )\r\n})\r\n\r\nRoomItem.propTypes = {\r\n  itemData:PropTypes.object,\r\n  roomWidth:PropTypes.string\r\n}\r\n\r\nexport default RoomItem\r\n","import styled from \"styled-components\";\r\n\r\nexport const EntireWrapper = styled.div`\r\n  padding: 10px;\r\n  margin-top: 130px;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const EntireFilterWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 48px;\r\n  padding-left: 16px;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  background-color: #fff;\r\n\r\n  position: fixed;\r\n  top:80px;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 10;\r\n  \r\n  .filter {\r\n    display: flex;\r\n\r\n    .item {\r\n      margin: 0 4px 0 8px;\r\n      padding: 6px 12px;\r\n      border: 1px solid #dce0e0;\r\n      border-radius: 4px;\r\n      color: #484848;\r\n      cursor: pointer;\r\n\r\n      &.active {\r\n        background: #008489;\r\n        border: 1px solid #008489;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n`","import React, { memo,useState } from 'react'\r\nimport classNames from 'classnames'\r\nimport { EntireFilterWrapper } from './style'\r\nimport filterData from '@/assets/data/filter_data.json'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchEntireRoomsAction } from '@/store/modules/entire'\r\n\r\nconst EntireFilter = memo(() => {\r\n  const [selectItems, setSelectItems] = useState([])\r\n  const dispatch = useDispatch()\r\n  const itemClickHandle = (item) => {\r\n    let index = selectItems.findIndex(ite => ite === item)\r\n    if(index !== -1) {\r\n      let newSelectItems = [...selectItems]\r\n      newSelectItems.splice(index,1)\r\n      setSelectItems(newSelectItems)\r\n    }else{\r\n      let newSelectItems = [...selectItems]\r\n      newSelectItems.push(item)\r\n      setSelectItems(newSelectItems)\r\n    }\r\n    dispatch(fetchEntireRoomsAction(0))\r\n  }\r\n  return (\r\n    <EntireFilterWrapper>\r\n       <div className=\"filter\">\r\n        {\r\n          filterData.map((item) => {\r\n            return (\r\n              <div \r\n                className={classNames(\"item\", { active: selectItems.includes(item) })} \r\n                key={item}\r\n                onClick={e => itemClickHandle(item)}\r\n              >\r\n                {item}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </EntireFilterWrapper>\r\n  )\r\n})\r\n\r\nexport default EntireFilter","import styled from \"styled-components\";\r\n\r\nexport const EntireRoomsWrapper = styled.div`\r\n  position: relative;\r\n  padding: 30px 20px;\r\n\r\n  .title {\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    color: #222;\r\n    margin: 0 0 10px 10px;\r\n  }\r\n\r\n  .list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  > .cover {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: rgba(255,255,255,.8);\r\n  }\r\n\r\n`","import RoomItem from '@/components/room-item'\r\nimport { changeDetailInfoAction } from '@/store/modules/detail'\r\nimport PropTypes from 'prop-types'\r\nimport React, { memo,useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { EntireRoomsWrapper } from './style'\r\n\r\nconst EntireRooms = memo((props) => {\r\n  const {roomList=[],isLoading=false,totalCount=0} = props\r\n  const navgator = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const navToDetail = useCallback((item) => {\r\n      dispatch(changeDetailInfoAction(item))\r\n      navgator('/detail')\r\n    },[dispatch,navgator],)\r\n  \r\n  return (\r\n    <EntireRoomsWrapper>\r\n      <div className=\"title\">{totalCount}多处住所</div>\r\n      <div className=\"list\">\r\n      {\r\n        !!roomList.length && roomList.map(room => {\r\n          return (\r\n            <RoomItem itemData={room} key={room._id} roomWidth='20%' itemClick={navToDetail} />\r\n          )\r\n        })\r\n      }\r\n      </div>\r\n      {isLoading && <div className=\"cover\"></div>}\r\n    </EntireRoomsWrapper>\r\n  )\r\n})\r\n\r\nEntireRooms.propTypes = {\r\n  roomList:PropTypes.array,\r\n  isLoading:PropTypes.bool,\r\n  totalCount:PropTypes.number\r\n}\r\n\r\nexport default EntireRooms","import styled from \"styled-components\";\r\n\r\nexport const EntirePagenavWrapper = styled.div`\r\n\r\ndisplay: flex;\r\n  justify-content: center;\r\n\r\n  .info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .MuiPaginationItem-icon {\r\n      font-size: 24px;\r\n    }\r\n\r\n    .MuiPaginationItem-page {\r\n      margin: 0 9px;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n\r\n    .MuiPaginationItem-page.Mui-selected {\r\n      background-color: #222;\r\n      color: #fff;\r\n    }\r\n\r\n    .desc {\r\n      margin-top: 16px;\r\n      color: #222;\r\n    }\r\n  }\r\n`","import PropTypes from 'prop-types'\r\nimport React, { memo } from 'react'\r\nimport { Pagination } from '@mui/material'\r\nimport { EntirePagenavWrapper } from './style'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchEntireRoomsAction } from '@/store/modules/entire'\r\n\r\nconst EntirePagenav = memo((props) => {\r\n  const { totalCount=0,currentPage=0 } = props\r\n  const dispatch = useDispatch()\r\n  const handleChange = (e,value) => {\r\n    console.log('pageChange',value)\r\n    dispatch(fetchEntireRoomsAction(value - 1))\r\n  }\r\n  return (\r\n    <EntirePagenavWrapper>\r\n      <div className=\"info\">\r\n        <Pagination count={totalCount} page={currentPage + 1} onChange={handleChange} />\r\n        <div className=\"desc\">第xx-xx个房源</div>\r\n      </div>\r\n    </EntirePagenavWrapper>\r\n  )\r\n})\r\n\r\nEntirePagenav.propTypes = {\r\n  totalCount:PropTypes.number,\r\n  currentPage:PropTypes.number\r\n}\r\n\r\nexport default EntirePagenav","import React, { memo,useEffect } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from  'react-redux'\r\nimport { EntireWrapper } from './style'\r\nimport EntireFilter from './c-cpns/entire-filter'\r\nimport EntireRooms from './c-cpns/entire-rooms'\r\nimport EntirePagenav from './c-cpns/entire-pagenav'\r\nimport { fetchEntireRoomsAction } from '@/store/modules/entire'\r\nimport { changeHeaderConfigAction } from '@/store/modules/main'\r\n\r\nconst Entire = memo(() => {\r\n  const {totalCount=0,roomList=[],isLoading=false,currentPage=0} = useSelector((state)=>({\r\n    totalCount:state.entire.totalCount,\r\n    roomList:state.entire.roomList,\r\n    isLoading:state.entire.isLoading,\r\n    currentPage:state.entire.currentPage\r\n  }),shallowEqual)\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(()=>{\r\n    dispatch(changeHeaderConfigAction({isFixed:true,topAlpha:false}))\r\n    dispatch(fetchEntireRoomsAction(0))\r\n  },[dispatch])\r\n  return (\r\n    <EntireWrapper>\r\n      <EntireFilter />\r\n      <EntireRooms roomList={roomList} isLoading={isLoading} totalCount={totalCount} />\r\n      <EntirePagenav totalCount={totalCount} currentPage={currentPage} />\r\n    </EntireWrapper>\r\n  )\r\n})\r\n\r\nexport default Entire"],"names":["IconArrowLeft","memo","props","_props$width","width","_props$height","height","_jsx","viewBox","role","focusable","style","styleStrToObj","concat","children","d","fillRule","IconArrowRight","IndicatorWrapper","styled","_templateObject","_taggedTemplateLiteral","_props$selectIndex","selectIndex","contentRef","useRef","useEffect","selectItemEl","current","itemLeft","offsetLeft","itemWidth","clientWidth","contentWidth","distance","totalDistance","scrollWidth","transform","className","ref","RoomItemWrapper","roomWidth","verifyColor","theme","text","primaryColor","RoomItem","_itemData$picture_url","_itemData$picture_url2","_itemData$verify_info","_itemData$verify_info2","_itemData$star_rating","itemData","itemClick","sliderRef","_useState","useState","_useState2","_slicedToArray","selectedIndex","setSelectedIndex","controlClickHandle","e","isRight","arguments","length","undefined","stopPropagation","next","prev","newIndex","picture_urls","pictureElement","src","picture_url","alt","sliderElement","_jsxs","onClick","Indicator","map","item","index","classNames","active","Carousel","dots","verify_info","text_color","messages","join","name","price","Rating","defaultValue","star_rating","precision","readOnly","sx","fontSize","color","reviews_count","bottom_info","content","EntireWrapper","EntireFilterWrapper","selectItems","setSelectItems","dispatch","useDispatch","filterData","includes","findIndex","ite","newSelectItems","_toConsumableArray","splice","push","fetchEntireRoomsAction","itemClickHandle","EntireRoomsWrapper","_props$roomList","roomList","_props$isLoading","isLoading","_props$totalCount","totalCount","navgator","useNavigate","navToDetail","useCallback","changeDetailInfoAction","room","_id","EntirePagenavWrapper","_props$currentPage","currentPage","Pagination","count","page","onChange","value","console","log","_useSelector","useSelector","state","entire","shallowEqual","_useSelector$totalCou","_useSelector$roomList","_useSelector$isLoadin","_useSelector$currentP","changeHeaderConfigAction","isFixed","topAlpha","EntireFilter","EntireRooms","EntirePagenav"],"sourceRoot":""}